Завдання:
1. В грі необхідно створювати NPC (охоронець, продавець, місцевий мешканець тощо),
в яких є паттерни поведінки, зокрема: торгівля, пересування та діалог з гравцем. В залежності від певних умов,
паттерни поведінки під час гри можуть змінюватись. Необхідно створити гнучку систему, яка дозволить легко змінювати поведінку NPC
та відкритою до масштабування.
2. В грі потрібно додати можливість поставити її на паузу. Під час паузи, ігрові об`єкти повинні перестати рухатись, програвати анімації та ефекти.
Слід врахувати, що ігрові елементи можуть мати різну логіку руху (анімація, фізика, візуальні ефекти)
3. Для спрощення процесу побудови рівнів в ігровому редакторі під час створення NPC,
необхідно додати можливість для розробників скасувати попередні дії зі створення або видалення NPC.

Для підсистеми створення NPC з динамічними паттернами поведінки, використати шаблон проектування Стратегія,
який дозволяє змінювати поведінку об`єктів під час виконання програми.

Для підсистеми паузи гри, використати шаблон проектування Спостерігач,
який дозволяє здійснювати інформування всіх зареєстрованих об`єктів щодо початку чи закінчення паузи

Для спрощення процесу побудови рівнів, додати підсистему, яка дозволяє здійснювати Undo/Redo дії під час створення NPC.
Для цього використати шаблон проектування Команда

1. Створити підсистему NPC, додати інтерфейс ICitizen та реалізувати його в класах Citizen, GuardianCitizen, PeasanCitizen, TraderCitizen
2. Стратегія
 - використовуючи паттерн Стратегія, створити підсистему реалізації шаблонів поведінки для NPC, які легко можна змінити.
 - додати інтерфейс IDialogBehavior. Додати клас OpenToDialogBehavior, який реалізовуватиме цей інтерфейс
 - додати інтерфейс ITradeBehaviour. Додати класи OpenToTradeBehavior иа CloseToTradeBehavior які реалізовуватимуть цей інтерфейс
 - додати інтерфейс IMovementBehaviour. Додати класи StayOnOneSpotBehaviour иа PatrolingBehavior які реалізовуватимуть цей інтерфейс
 - в інтерфейсі ICitizen додати методи зміни поведінки:
   - void ChangeTradBehaviour(ITradeBehaviour tradeBehaviour);
   - void ChangeDialogBehaviour(IDialogBehaviour dialogBehaviour)
   - void ChangeMovementBehaviour(IMovementBehaviour movementBehaviour);
 - до класу Citizen додати приватні поля ITradeBehaviour, IDialogBehaviour, IMovementBehaviour та змінювати їх у відповідних методах
3. Команда
 - створити підсистему відміни останніх дій користувача під час роботи з NPC, для цього використати шаблон Команда
 - створити інтерфейс ICommand та реалізувати його в класах UndoUnitCreationCommand, UndoUnitDeletionCommand
 - під час створення або видалення NPC - зберігати дану інформацію в Queaue<ICommand> та за необхідності виконувати команди з черги
4. Спостерігач
 - створити підсистему паузи в грі, для цього використати паттерн Спостерігач.
 - cтворити інтерфейс IObserver з методами Subscribe(IListener listener), Unsubscribe(IListener listener), SendMessage(IMessage msg)
   інтерфейс реалізувати в класі Observer
 - створити інтерфейс IListener з методом Receive(IMessage msg) та реалізувати його в класі Citizen
 - створити інтерфейс IMassage та реалізувати його в класі GamePauseMessage
 - в класі Citizen, в методі Receive обробляти інформацію  про паузу під час отримання повідомлення GamePauseMessage
