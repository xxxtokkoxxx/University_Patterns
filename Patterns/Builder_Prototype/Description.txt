Завдання: 
В грі жанру стратегії необхідно створювати юнітів за заздалегіть заданими архетипами,
наприклад: вміє атакувати в ближньому та дальному бою, вміє застосовувати магію та атакувати в ближньому бою і т.д.
Кожний юніт повинен мати ім'я та список здібностей, які попередньо йому були додані.
Також в грі повина бути можливість обирати юніта та роботи його копію. Копіювання повинно бути двох типів: часткове та повне.
При здійсненні повного копіювання, ім'я юніта та його всі властивості, передаються новій копії,
а при частковому копіювання - новому юніту передається лише ім'я.

Для підсистеми свторення юнітів за заздалегіть заданими архетипами використати шаблон проектування Будівельник, 
який дозволяє створювати створювати юнітів за визначеним шаблоном.
Для підсистеми копіювання юнітів використати шаблон проектування Прототип, 
який дозволяє робити часткову та повну копію юніта.

1. Додати підсистему юнтів, яких можна в подальшому створюти
- додати інтерфейс IUnit;
- до інтерфейсу IUnit додати метод AddAbility(string ability);
- створити клас Unit, який реалізовує інтерфейс IUnit, додати приватний список List<string> abilities;
2. Створити підсистему здібностей юнітів.
- додати інтерфейс IAbility
- додати класи MeleeAttack, RangedAttack та MagicAttack, які реалізовують інтерфейс IAbility
3. Будівельник:
- додати підсистему побудови юнтів з використанням паттерну проектування Будівельник
- створити інтерфейс IBuilder з методами, які будуть додавати здібності юнітам:
- створити клас Builder, який реалізовує інтерфейс IBuilder:
- створити клас Director, який може створювати юнітів за заздалегіть заданим архетипом
4. Прототип:
- Створити підсистему копіювання юнітів з використанням патерну Прототип
- створити інтерфейс IClonable з методам PartialCopy() та DeepCopy(), які повертають тип object
- реалізувати інтерфейс IClonable в класі Unit