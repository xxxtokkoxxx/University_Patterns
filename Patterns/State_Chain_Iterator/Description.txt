Завдання
1. Для мобільного застосунку необхідно реалізувати глобальну систему життєвого циклу, в якому можна здійснювати контроль запуску застосунку,
управлянням ресурсами та ініціалізації внутрішніх сервісів.
2. Для мобільного застосунку необхідно реалізувати комплексну систему входу користувача в мережу. Вхід користувача повинен відбуватися в декілька етапів.
Поки попередній етап не буде успішним, система не повина переходити до наступного етапу.
3. Для зручного доступу до користувачів за спільними інтересами в застосунку застосовано алгоритм breadth-first-search.
Розробити систему, яка дозволить швидко та ефективно ітерувати граф з даними

1. Створити підсистему глобальних станів застосунку з використанням шаблону проектування Стан
  - додати інтерфейс IState з методами Enter(), Exit()
  - додати класи BootstrapState, ResourcesLoadingState, AppLoopState, ResourcesUnloadingState, які реалізовують інтерфейс IState
  - додати клас StateMachine, який управляє змінами станів
2. З використанням шаблону Ланцюжку відповідальності, створити підсистему послідовного входу користувача в мережу
  - додати клас Handler та підкласи AuthenticationHandler, AuthorizationHandler, LiggingHandler
  - в класі Handler передбачити метод SetNext(Handler next), який отримує посилання на наступний Handler та метод Handle(),
який повинен містити логіку переходу до наступного Handle
3. З використанням шаблону Ітератор, створити підсистему послідовного доступу до елементів колекції, не розкриваючи її внутрішню структуру.
  - додати клас Iterator, який реалізовує інтерфейс IEnumerator<T>
  - додати клас IteratorAggragate, який реалізовує інтерфейс IEnumerable<T> та метод List<T> GetItems();
  - додати підклас UsersCollection до класу IteratorAggragate, який буде відповідальним за додавання нових елементів
  - додати підклас UserIterator до класу Iterator, який буде відповідальним за поточний та наступний елемент в колекції